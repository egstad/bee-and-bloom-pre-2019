/* ==========================================================================
   Utilities
   ========================================================================== */


/* Breakpoints
   ========================================================================== */
@mixin breakpoint($min:$vp1, $max:null) {
    // for max-width
    @if $min == max {
        @media (max-width: $max) { @content; }
        }

    // min & max-width
    @elseif ($min) and ($max) {
        @media (min-width: $min) and (max-width: $max) { @content; }
        }

    // min-width (default)
    @else {
        @media (min-width: $min) { @content; }
        }
    }





/* Grid
   ========================================================================== */

@mixin col($col:1){
    width: percentage( $col / $grid-length );
}




/* ==========================================================================
   Typography
   ========================================================================== */


/* Text-size: font size generator
   ========================================================================== */
@mixin text-size($level: 0, $increments: 7) {
    // 0 is default font size
    @if $level == 0 {
        font-size: $font-size#{px};
        }

    @elseif $level < 0 {
        // add increments if below 0
        font-size: ((($font-size * $level) * $font-scale) / ($increments / 0.5)) + $font-size#{px};
        }

    @else {
        font-size: ((($font-size * $level) * $font-scale) / $increments) + $font-size#{px};
        }
    }

@mixin txt($size: m) {
    @if $size == xs {
        @include text-size(-2.5);
        @include breakpoint($vp2) { @include text-size(-2); }
        @include breakpoint($vp3) { @include text-size(-1); }
    }

    @elseif $size == s {
        font-size: 0.875rem;
    	@include breakpoint($vp4) { font-size: 1rem; }
    }

    @elseif $size == m {
        line-height: 1.8;
    	@include text-size(0);
    	@include breakpoint($vp2) { @include text-size(1); }
    	@include breakpoint($vp4) { @include text-size(2); }
    }

    @elseif $size == l {
        line-height: 1.4;
        font-size: 1.375rem;
        @include breakpoint($vp3) { font-size: 1.5rem; }
        @include breakpoint($vp4) { font-size: 1.75rem; }
    }

    @elseif $size == xl {
        @include text-size(4);
    	@include breakpoint($vp2) { @include text-size(5); }
    	@include breakpoint($vp3) { @include text-size(5.5); }
    }

    @elseif $size == xxl {
        margin-bottom: 2rem;
        line-height: 1.3;
    	@include text-size(6);
    	@include breakpoint($vp2) { @include text-size(7); }
    	@include breakpoint($vp3) { @include text-size(8); }
        @include breakpoint($vp4) { @include text-size(9); }
    }
}


/* Hide text
   ========================================================================== */
@mixin hide-text() {
    overflow: hidden;
    text-indent: -5000px;
    display: block;
    height: 0;
    }


/* Uppercase - with adjustable letter spacing
   ========================================================================== */
@mixin uppercase($letter-spacing: 0.1em) {
    text-transform: uppercase;
    letter-spacing: $letter-spacing;
    }


/* Hyphenate
   ========================================================================== */
@mixin hyphenate() {
    word-break: break-word;
    hyphens: auto;
    }


/* Truncate - with optional width
   ========================================================================== */
@mixin truncate($width: 100%) {
    width: $width;
    max-width: 100%;
    display: block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    }




/* ==========================================================================
   Box Model & Positioning
   ========================================================================== */


/* Center: Center elements
   ========================================================================== */
@mixin center() {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    }


/* maintain aspect ratio
   ========================================================================== */
@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}


/* Child-margins: Voids margins for child elements
   ========================================================================== */
@mixin child-margins($levels: 1) {
    @if $levels == 1 {
        > :first-child { margin-top: 0; }
        > :last-child { margin-bottom: 0; }
        }

    @elseif $levels == 2 {
        > :first-child > :first-child { margin-top: 0; }
        > :last-child > :last-child { margin-bottom: 0; }
        }
    }


/* Clearfix
   ========================================================================== */
@mixin clear {
    zoom:1;

    &:before, &:after {
        content: " ";
        display: table;
        }

    &:after {
        clear: both;
        }
    }
