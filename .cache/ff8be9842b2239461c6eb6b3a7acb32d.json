{"dependencies":[{"name":"../core","loc":{"line":1,"column":22}},{"name":"./Menu","loc":{"line":2,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = require(\"../core\");\n\nvar core = _interopRequireWildcard(_core);\n\nvar _Menu = require(\"./Menu\");\n\nvar _Menu2 = _interopRequireDefault(_Menu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst $_jsItems = core.dom.nav.find(\".js-menu-nav-item\");\n\n/**\n *\n * @public\n * @namespace nav\n * @description Handles opening / closing the main nav menu.\n * @memberof menus\n *\n */\nconst nav = {\n  /**\n   *\n   * @public\n   * @method init\n   * @memberof menus.nav\n   * @description Initializes navmenu interactions.\n   *\n   */\n  init() {\n    this.bindMainEvents();\n\n    this.menu = new _Menu2.default(core.dom.nav);\n\n    // core.log( \"nav initialized\" );\n  },\n\n  /**\n   *\n   * @public\n   * @method open\n   * @memberof menus.nav\n   * @description Opens the navmenu.\n   *\n   */\n  open() {\n    this.menu.open();\n  },\n\n  /**\n   *\n   * @public\n   * @method close\n   * @memberof menus.nav\n   * @description Closes the navmenu.\n   *\n   */\n  close() {\n    this.menu.close();\n  },\n\n  /**\n   *\n   * @public\n   * @method toggleActive\n   * @param {string} id The unique nav identifier\n   * @memberof menus.nav\n   * @description Toggle the active nav menu item by id.\n   *\n   */\n  toggleActive(id) {\n    const $navi = $_jsItems.find(`.js-nav__${id}`);\n\n    if ($navi.length) {\n      $_jsItems.removeClass(\"is-active\");\n      $navi[0].className += \" is-active\";\n    }\n  },\n\n  /**\n   *\n   * @public\n   * @method bindMainEvents\n   * @memberof menus.nav\n   * @description Setup main interaction events for nav/header.\n   *\n   */\n  bindMainEvents() {\n    core.dom.nav.on(\"click\", \".js-menu-nav\", onTapNavMenu);\n    core.dom.header.on(\"click\", \".js-controller--nav\", onTapNavIcon);\n  }\n};\n\n/**\n *\n * @private\n * @method onTapNavMenu\n * @memberof menus.nav\n * @description Handles list icon event.\n *\n */\nconst onTapNavMenu = function () {\n  nav.close();\n};\n\n/**\n *\n * @private\n * @method onTapNavIcon\n * @memberof menus.nav\n * @description Handles list icon event.\n *\n */\nconst onTapNavIcon = function () {\n  nav.open();\n};\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = nav;"},"hash":"5be9f6b1051bf5c45086f191e3864577"}