{"dependencies":[{"name":"./router","loc":{"line":1,"column":19}},{"name":"./core","loc":{"line":2,"column":22}},{"name":"./menus/nav","loc":{"line":3,"column":16}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _router = require(\"./router\");\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _core = require(\"./core\");\n\nvar core = _interopRequireWildcard(_core);\n\nvar _nav = require(\"./menus/nav\");\n\nvar _nav2 = _interopRequireDefault(_nav);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import textBar from \"./comp-textbar\";\n// import filterSort from \"./filtersort\";\n\n\n/**\n *\n * @public\n * @class App\n * @classdesc Load the App application Class to handle it ALL.\n *\n */\nclass App {\n  constructor() {\n    // this.nav = nav;\n    this.core = core;\n    // this.textBar = textBar;\n    // this.router = router;\n    // this.filterSort = filterSort;\n\n    this.initEvents();\n    this.initModules();\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method initModules\n   * @memberof App\n   * @description Initialize application modules.\n   *\n   */\n  initModules() {\n    // add device classes to htmle (touch, hover, surface classes)\n    this.core.detect.init(this);\n    this.core.scrolls.init(this);\n    // this.textBar.init( this );\n    // this.core.resizes.init( this );\n    // this.router.init( this );\n    // this.nav.init( this );\n    // this.filterSort.init( this );\n\n    this.analytics = new this.core.Analytics();\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method initEvents\n   * @memberof App\n   * @description Initialize application events.\n   *\n   */\n  initEvents() {\n    this._onPreloadDone = this.onPreloadDone.bind(this);\n\n    this.core.emitter.on(\"app--preload-done\", this._onPreloadDone);\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method onPreloadDone\n   * @memberof App\n   * @description Handle the event for initializing the app.\n   *\n   */\n  onPreloadDone() {\n    this.core.emitter.off(\"app--preload-done\", this._onPreloadDone);\n\n    this.core.dom.html.removeClass(\"is-clipped\");\n    this.core.dom.body.removeClass(\"is-clipped\");\n  }\n}\n\n/******************************************************************************\n * Expose\n*******************************************************************************/\nwindow.app = new App();\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = window.app;"},"hash":"15624706b6a1b054931dc7b046334a0d"}