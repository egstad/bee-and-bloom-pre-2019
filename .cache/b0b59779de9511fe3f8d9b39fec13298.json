{"dependencies":[{"name":"./dom","loc":{"line":1,"column":16}},{"name":"./log","loc":{"line":2,"column":16}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _dom = require(\"./dom\");\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _log = require(\"./log\");\n\nvar _log2 = _interopRequireDefault(_log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst vendors = [\"Webkit\", \"Moz\", \"ms\"];\n\n/**\n *\n * @public\n * @namespace detect\n * @memberof core\n * @description Handles basic detection of touch devices.\n *\n */\nconst detect = {\n  /**\n   *\n   * @public\n   * @method init\n   * @memberof core.detect\n   * @description Initializes the detect module.\n   *\n   */\n  init() {\n    this._isTouch = \"ontouchstart\" in window || \"DocumentTouch\" in window;\n    this._isMobile = /Android|BlackBerry|iPhone|iPad|iPod|IEMobile|Opera Mini/gi.test(window.navigator.userAgent);\n    this._isSurface = \"onmouseover\" in document && /Windows NT/.test(window.navigator.userAgent) && /Touch/.test(window.navigator.userAgent);\n    this._isStandalone = \"standalone\" in window;\n    this._prefix = this.getPrefix();\n\n    // iOS Standalone mode\n    if (\"standalone\" in window) {\n      _dom2.default.html.addClass(\"is-standalone\");\n    }\n\n    // Windows Surface mode\n    if (this._isSurface) {\n      _dom2.default.html.addClass(\"is-surface\");\n    }\n\n    // Touch support mode\n    if (this._isTouch) {\n      _dom2.default.html.addClass(\"is-touchable\");\n\n      // Mouse support mode\n    } else {\n      _dom2.default.html.addClass(\"is-hoverable\");\n    }\n\n    // log( \"detect initialized\" );\n  },\n\n  /**\n   *\n   * @public\n   * @method getPrefix\n   * @memberof core.detect\n   * @description Get the vendor prefix.\n   * @returns {string}\n   *\n   */\n  getPrefix() {\n    let i = vendors.length;\n\n    if (document.body.style.transform === null) {\n      for (i; i--;) {\n        if (document.body.style[`${vendors[i]}Transform`]) {\n          return vendors[i];\n        }\n      }\n    }\n\n    return \"\";\n  },\n\n  /**\n   *\n   * @public\n   * @method getPrefixed\n   * @param {string} property The property to be prefixed\n   * @memberof core.detect\n   * @description Get the vendor prefixed property.\n   * @returns {string}\n   *\n   */\n  getPrefixed(property) {\n    const camelProp = property[0].toUpperCase() + property.slice(1);\n\n    return this._prefix ? this._prefix + camelProp : property;\n  },\n\n  /**\n   *\n   * @public\n   * @method isMobile\n   * @memberof core.detect\n   * @description Check for high-end mobile device user agents.\n   * @returns {boolean}\n   *\n   */\n  isMobile() {\n    return this._isMobile;\n  },\n\n  /**\n   *\n   * @public\n   * @method isTouch\n   * @memberof core.detect\n   * @description Check whether this is a touch device or not.\n   * [See Modernizr]{@link https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js}\n   * @returns {boolean}\n   *\n   */\n  isTouch() {\n    return this._isTouch;\n  },\n\n  /**\n   *\n   * @public\n   * @method isDevice\n   * @memberof core.detect\n   * @description Must be `isMobile` and `isTouch`.\n   * @returns {boolean}\n   *\n   */\n  isDevice() {\n    return this._isTouch && this._isMobile;\n  },\n\n  /**\n   *\n   * @public\n   * @method isStandalone\n   * @memberof core.detect\n   * @description Must be window.standalone.\n   * @returns {boolean}\n   *\n   */\n  isStandalone() {\n    return this._isStandalone;\n  }\n};\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = detect;"},"hash":"239e0447440c3500936e3865ba179508"}