{"dependencies":[{"name":"./env","loc":{"line":1,"column":16}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _env = require(\"./env\");\n\nvar _env2 = _interopRequireDefault(_env);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * @public\n * @method log\n * @memberof core\n * @description Normalized app console logger.\n *              If you want to use another console method like `info` or `warn`\n *              you can pass it as the first argument to the `log` method here.\n *              The default method that will be assumed is `console.log`.\n *\n *              Examples:\n *              log( \"info\", ...args )\n *              log( \"warn\", ...args )\n *              log( \"trace\", ...args )\n *              log( \"debug\", ...args )\n *\n */\nconst log = function (...args) {\n  // Only log for development environments\n  if (!_env2.default.isDev() || !(\"console\" in window)) {\n    return;\n  }\n\n  let method = \"log\";\n\n  // First arg can be another `console` method to call ?\n  if (typeof console[args[0]] === \"function\") {\n    method = args[0];\n    args = args.slice(1, args.length);\n  }\n\n  window.console[method](args);\n};\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = log;"},"hash":"a2acb07a8f5afe373902a9ad7f8b2ae8"}