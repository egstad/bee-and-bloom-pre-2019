{"dependencies":[{"name":"./util","loc":{"line":1,"column":22}},{"name":"./log","loc":{"line":2,"column":16}},{"name":"./emitter","loc":{"line":3,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require(\"./util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _log = require(\"./log\");\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _emitter = require(\"./emitter\");\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n *\n * @public\n * @class Waypoints\n * @memberof core\n * @param {Hobo} elements The element collection to iterate over\n * @param {function} callback The function to pass the elements to\n * @param {function} executor The function that determines a waypoint element is found\n * @classdesc Handles one time notification when Elements enter the viewport.\n *\n */\nclass Waypoints {\n  constructor(elements, callback, executor) {\n    this.elements = elements;\n    this.callback = callback;\n    this.executor = executor || util.isElementLoadable;\n\n    if (!this.elements || !this.callback) {\n      // log( \"warn\", \"Waypoints needs `elements` and a `callback` method!\" );\n    }\n\n    this._onScroller = this.onScroller.bind(this);\n\n    this._onScroller();\n\n    _emitter2.default.on(\"app--scroll\", this._onScroller);\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method onScroller\n   * @memberof core.Waypoints\n   * @description Listen for the scroll event.\n   *\n   */\n  onScroller() {\n    const $queued = this.elements.not(\".is-waypoint\");\n    let i = $queued.length;\n    let $elem = null;\n\n    if (!$queued.length) {\n      this.destroy();\n    }\n\n    for (i; i--;) {\n      $elem = $queued.eq(i);\n\n      if (this.executor($elem[0])) {\n        $elem.addClass(\"is-waypoint\");\n\n        this.callback($elem);\n      }\n    }\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method destroy\n   * @memberof core.Waypoints\n   * @description Undo event bindings for this instance.\n   *\n   */\n  destroy() {\n    _emitter2.default.off(\"app--scroll\", this._onScroller);\n  }\n}\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = Waypoints;"},"hash":"551e5e1b8cf6cffb8379e251e0ccaacf"}