{"dependencies":[{"name":"js_libs/jquery/dist/jquery.js","loc":{"line":1,"column":14}},{"name":"./util","loc":{"line":2,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = require(\"js_libs/jquery/dist/jquery.js\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _util = require(\"./util\");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _rSlash = /^\\/|\\/$/g;\n\n/**\n *\n * @public\n * @namespace api\n * @memberof core\n * @description Provide some api methods for accessing content via JS.\n *\n */\nconst api = {\n  /**\n   *\n   * @public\n   * @member data\n   * @memberof core.api\n   * @description URLs this little api needs to use.\n   *\n   */\n  data: {\n    site: {\n      url: location.origin,\n      api: [location.origin, \"api\"].join(\"/\")\n    }\n  },\n\n  /**\n   *\n   * @public\n   * @member dataType\n   * @memberof core.api\n   * @description Default dataType for the `request` api method.\n   *\n   */\n  dataType: \"json\",\n\n  /**\n   *\n   * @public\n   * @member method\n   * @memberof core.api\n   * @description Default method for the `request` api method.\n   *\n   */\n  method: \"GET\",\n\n  /**\n   *\n   * @public\n   * @method urify\n   * @param {string} uri The collection uri\n   * @memberof core.api\n   * @description Ensures a leading/trailing slash.\n   * @returns {string}\n   *\n   */\n  urify(uri) {\n    return [\"/\", uri.replace(_rSlash, \"\"), \"/\"].join(\"\");\n  },\n\n  /**\n   *\n   * @public\n   * @method endpoint\n   * @param {string} uri The collection uri\n   * @memberof core.api\n   * @description Creates the fullUrl from a collection uri.\n   * @returns {string}\n   *\n   */\n  endpoint(uri) {\n    return [this.data.site.url, uri.replace(_rSlash, \"\")].join(\"/\");\n  },\n\n  /**\n   *\n   * @public\n   * @method apipoint\n   * @param {string} uri The API uri\n   * @memberof core.api\n   * @description Creates the fullUrl from an API uri.\n   * @returns {string}\n   *\n   */\n  apipoint(uri) {\n    return [this.data.site.api, uri.replace(_rSlash, \"\")].join(\"/\");\n  },\n\n  /**\n   *\n   * @public\n   * @method request\n   * @param {string} url The API URL\n   * @param {object} params Merge params to send\n   * @param {object} options Merge config to pass to $.ajax()\n   * @memberof core.api\n   * @description Creates the fullUrl from an API uri.\n   * @returns {Promise}\n   *\n   */\n  request(url, params, options) {\n    const data = util.extendObject({\n      format: this.format,\n      nocache: true\n    }, params);\n    const opts = util.extendObject({\n      url,\n      data,\n      dataType: this.dataType,\n      method: this.method\n    }, options);\n\n    return _jquery2.default.ajax(opts);\n  }\n};\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = api;"},"hash":"23c62226dac55c52f212166336520d0d"}