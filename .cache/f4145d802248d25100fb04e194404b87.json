{"dependencies":[{"name":"../core","loc":{"line":1,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = require(\"../core\");\n\nvar core = _interopRequireWildcard(_core);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n *\n * @public\n * @class Menu\n * @classdesc Handle normalized open/close for overlay menus.\n * @param {Hobo} $node The menu element\n *\n */\nclass Menu {\n  constructor($node) {\n    this.$node = $node;\n    this.tDuration = core.util.getTransitionDuration(this.$node[0]);\n    this.isOpen = false;\n\n    this.$node.detach();\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method open\n   * @memberof menus.Menu\n   * @description Open the menu.\n   *\n   */\n  open() {\n    this.isOpen = true;\n\n    core.dom.html.addClass(\"is-neverflow is-menu-open\");\n    core.dom.body.append(this.$node);\n\n    setTimeout(() => this.$node.addClass(\"is-active\"), 100);\n    setTimeout(() => this.$node.addClass(\"is-active-events\"), this.tDuration * 2);\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method close\n   * @memberof menus.Menu\n   * @description Close the menu.\n   *\n   */\n  close() {\n    this.isOpen = false;\n\n    this.$node.removeClass(\"is-active\");\n    core.dom.html.removeClass(\"is-neverflow\");\n\n    setTimeout(() => {\n      core.dom.html.removeClass(\"is-menu-open\");\n      this.$node.detach().removeClass(\"is-active-events\");\n    }, this.tDuration * 2);\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method toggle\n   * @memberof menus.Menu\n   * @description Open or Close the menu.\n   *\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   *\n   * @public\n   * @instance\n   * @method isActive\n   * @memberof menus.Menu\n   * @description Check the state of the menu.\n   * @returns {boolean}\n   *\n   */\n  isActive() {\n    return this.isOpen;\n  }\n}\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = Menu;"},"hash":"be534009974103064bb018f7c51e0f16"}