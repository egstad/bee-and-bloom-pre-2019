{"dependencies":[{"name":"./log","loc":{"line":1,"column":16}},{"name":"./emitter","loc":{"line":2,"column":20}},{"name":"./resizer","loc":{"line":3,"column":20}},{"name":"properjs-throttle","loc":{"line":4,"column":21}},{"name":"properjs-debounce","loc":{"line":5,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _log = require(\"./log\");\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _emitter = require(\"./emitter\");\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _resizer = require(\"./resizer\");\n\nvar _resizer2 = _interopRequireDefault(_resizer);\n\nvar _properjsThrottle = require(\"properjs-throttle\");\n\nvar _properjsThrottle2 = _interopRequireDefault(_properjsThrottle);\n\nvar _properjsDebounce = require(\"properjs-debounce\");\n\nvar _properjsDebounce2 = _interopRequireDefault(_properjsDebounce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst _throttled = 50;\nconst _debounced = 300;\n\n/**\n *\n * @public\n * @namespace resizes\n * @memberof core\n * @description Handles app-wide emission of various resize detection events.\n *\n */\nconst resizes = {\n  /**\n   *\n   * @public\n   * @method init\n   * @memberof core.resizes\n   * @description Method binds event listeners for resize controller.\n   *\n   */\n  init() {\n    _resizer2.default.on(\"resize\", (0, _properjsThrottle2.default)(onThrottle, _throttled));\n\n    // Hook into resize of `width` only for this handler\n    // @bug: iOS window size changes when Safari's chrome switches between full and minimal-ui.\n    _resizer2.default.on(\"resizewidth\", (0, _properjsDebounce2.default)(onDebounce, _debounced));\n\n    // log( \"resizes initialized\" );\n  }\n};\n\n/**\n *\n * @private\n * @method onDebounce\n * @memberof core.resizes\n * @description Debounced resize events.\n *\n */\nconst onDebounce = function () {\n  _emitter2.default.fire(\"app--resize-debounced\");\n};\n\n/**\n *\n * @private\n * @method onThrottle\n * @memberof core.resizes\n * @description Method handles the window resize event via [ResizeController]{@link https://github.com/ProperJS/ResizeController}.\n *\n */\nconst onThrottle = function () {\n  _emitter2.default.fire(\"app--resize\");\n};\n\n/******************************************************************************\n * Export\n*******************************************************************************/\nexports.default = resizes;"},"hash":"bb396045479cabd0fce31a2bad43af7e"}